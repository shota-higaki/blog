---
interface Props {
	id: string;
}

const { id } = Astro.props;
---

<button
  type="button"
  class="copy-button"
  data-code-block-id={id}
  aria-label="コードをコピー"
  title="コードをコピー"
>
  <svg
    class="copy-icon"
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
  >
    <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
    <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
  </svg>
  <svg
    class="check-icon"
    xmlns="http://www.w3.org/2000/svg"
    width="20"
    height="20"
    viewBox="0 0 24 24"
    fill="none"
    stroke="currentColor"
    stroke-width="2"
    stroke-linecap="round"
    stroke-linejoin="round"
    style="display: none;"
  >
    <polyline points="20 6 9 17 4 12"></polyline>
  </svg>
</button>

<style>
  .copy-button {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    padding: 0.5rem;
    background-color: rgba(0, 0, 0, 0.5);
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 0.375rem;
    color: #e5e7eb;
    cursor: pointer;
    transition: all 0.2s ease;
    opacity: 0;
    z-index: 10;
  }

  .copy-button:hover {
    background-color: rgba(0, 0, 0, 0.7);
    border-color: rgba(255, 255, 255, 0.2);
  }

  .copy-button:focus {
    outline: 2px solid rgb(var(--accent-light-mode));
    outline-offset: 2px;
  }

  html.dark .copy-button:focus {
    outline-color: rgb(var(--accent));
  }

  .copy-button:active {
    transform: scale(0.95);
  }

  .copy-button.copied {
    background-color: rgba(34, 197, 94, 0.2);
    border-color: rgba(34, 197, 94, 0.4);
  }

  .copy-icon,
  .check-icon {
    width: 20px;
    height: 20px;
    transition: opacity 0.2s ease;
  }

  .copy-button.copied .copy-icon {
    display: none;
  }

  .copy-button.copied .check-icon {
    display: block;
  }

  /* コードブロックにホバーした時にボタンを表示 */
  :global(.code-block-wrapper:hover) .copy-button,
  .copy-button:focus {
    opacity: 1;
  }

  /* モバイルではタップ時に表示 */
  @media (max-width: 768px) {
    .copy-button {
      opacity: 1;
    }
  }
</style>

<script>
  // すべてのコピーボタンにイベントリスナーを追加
  document.addEventListener('DOMContentLoaded', () => {
    const copyButtons = document.querySelectorAll('.copy-button');
    
    copyButtons.forEach((button) => {
      button.addEventListener('click', async (e) => {
        const btn = e.currentTarget as HTMLButtonElement;
        const codeBlockId = btn.dataset.codeBlockId;
        
        if (!codeBlockId) return;
        
        // 対応するコードブロックを見つける
        const codeBlock = document.querySelector(`[data-code-block-id="${codeBlockId}"] code`);
        
        if (!codeBlock) return;
        
        try {
          // コードテキストを取得してコピー
          const code = codeBlock.textContent || '';
          await navigator.clipboard.writeText(code);
          
          // 成功状態を表示
          btn.classList.add('copied');
          
          // 2秒後に元に戻す
          setTimeout(() => {
            btn.classList.remove('copied');
          }, 2000);
        } catch (err) {
          console.error('Failed to copy code:', err);
        }
      });
    });
  });
</script>