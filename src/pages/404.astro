---
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import GoogleAnalytics from '../components/GoogleAnalytics.astro';
import Header from '../components/Header.astro';
import ServiceWorker from '../components/ServiceWorker.astro';
import StructuredData from '../components/StructuredData.astro';
import ThemeToggle from '../components/ThemeToggle.astro';
import '../styles/global.css';

Astro.response.status = 404;
---

<!doctype html>
<html lang="ja">
	<head>
		<BaseHead title="404 - ページが見つかりません | Code & Living" description="お探しのページは見つかりませんでした。" />
		<GoogleAnalytics />
		<ServiceWorker />
		<StructuredData type="website" />
		<style>
			/* 404ページ専用のスタイル - スコープを限定 */
			.error-page {
				box-sizing: border-box;
				margin: 0;
				padding: 0;
				overflow: hidden;
				height: 100vh;
				width: 100%;
				position: relative;
				display: flex;
				flex-direction: column;
			}

			.error-container {
				flex: 1;
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				padding: 2rem;
				text-align: center;
				overflow: hidden;
				position: relative;
				width: 100%;
			}


			/* メインコンテンツ */
			.error-content {
				position: relative;
				z-index: 1;
			}

			/* SVGアニメーション */
			.svg-container {
				width: 100%;
				max-width: 400px;
				height: 300px;
				margin: 0 auto 2rem;
				overflow: hidden;
			}

			.code-bracket {
				fill: none;
				stroke: rgb(var(--accent-light-mode));
				stroke-width: 4;
				stroke-linecap: round;
				animation: draw-bracket 2s ease-out forwards;
			}

			html.dark .code-bracket {
				stroke: rgb(var(--accent));
			}

			@keyframes draw-bracket {
				from {
					stroke-dasharray: 1000;
					stroke-dashoffset: 1000;
				}
				to {
					stroke-dashoffset: 0;
				}
			}

			.error-404 {
				font-size: 120px;
				font-weight: bold;
				fill: rgb(var(--accent-light-mode));
				animation: number-fade 1.5s ease-out forwards;
				animation-delay: 0.5s;
				opacity: 0;
			}

			html.dark .error-404 {
				fill: rgb(var(--accent));
			}

			@keyframes number-fade {
				from {
					opacity: 0;
					transform: translateY(20px);
				}
				to {
					opacity: 1;
					transform: translateY(0);
				}
			}


			.error-message {
				font-size: 1.5rem;
				font-weight: 500;
				color: rgb(var(--gray));
				margin: 0 0 3rem;
				animation: fade-in 1s ease-out forwards;
				animation-delay: 1s;
				opacity: 0;
			}

			html.dark .error-message {
				color: rgb(var(--gray-light));
			}


			@keyframes fade-in {
				from {
					opacity: 0;
					transform: translateY(10px);
				}
				to {
					opacity: 1;
					transform: translateY(0);
				}
			}

			.error-actions {
				display: flex;
				gap: 1rem;
				flex-wrap: wrap;
				justify-content: center;
				animation: fade-in 1s ease-out forwards;
				animation-delay: 1.2s;
				opacity: 0;
			}

			.error-link {
				padding: 0.875rem 2rem;
				border-radius: 2rem;
				text-decoration: none;
				font-weight: 600;
				transition: all 0.3s ease;
				display: inline-flex;
				align-items: center;
				gap: 0.5rem;
				position: relative;
				overflow: hidden;
			}

			.error-link::before {
				content: '';
				position: absolute;
				top: 50%;
				left: 50%;
				width: 0;
				height: 0;
				background: rgba(255, 255, 255, 0.2);
				border-radius: 50%;
				transform: translate(-50%, -50%);
				transition: width 0.6s, height 0.6s;
				pointer-events: none;
			}

			.error-link:hover::before {
				width: 200px;
				height: 200px;
			}

			.error-link-primary {
				background-color: rgb(var(--accent-light-mode));
				color: white;
				box-shadow: 0 4px 20px rgba(var(--accent-light-mode), 0.3);
			}

			.error-link-primary:hover {
				transform: translateY(-3px);
				box-shadow: 0 6px 30px rgba(var(--accent-light-mode), 0.4);
			}

			.error-link-primary:focus {
				outline: 3px solid rgb(var(--accent-light-mode));
				outline-offset: 3px;
			}

			html.dark .error-link-primary {
				background-color: rgb(var(--accent));
				box-shadow: 0 4px 20px rgba(var(--accent), 0.3);
			}

			html.dark .error-link-primary:hover {
				box-shadow: 0 6px 30px rgba(var(--accent), 0.4);
			}

			html.dark .error-link-primary:focus {
				outline-color: rgb(var(--accent));
			}


			/* アクセシビリティ: アニメーションを減らす設定 */
			@media (prefers-reduced-motion: reduce) {
				*,
				*::before,
				*::after {
					animation-duration: 0.01ms !important;
					animation-iteration-count: 1 !important;
					transition-duration: 0.01ms !important;
				}
			}

			/* レスポンシブデザイン */
			@media (max-width: 640px) {
				.svg-container {
					height: 200px;
				}

				.error-404 {
					font-size: 80px;
				}

				.error-message {
					font-size: 1.25rem;
				}

				.error-actions {
					flex-direction: column;
					width: 100%;
					max-width: 300px;
				}

				.error-link {
					width: 100%;
					justify-content: center;
				}

			}
		</style>
	</head>
	<body class="error-page bg-white dark:bg-zinc-900">
		<a href="#main-content" class="skip-link">メインコンテンツへスキップ</a>
		<Header />
		<main id="main-content" class="error-container">
			<div class="error-content">
				<!-- SVGアニメーション -->
				<div class="svg-container">
					<svg viewBox="0 0 400 300" width="100%" height="100%">
						<!-- 左ブラケット -->
						<path class="code-bracket" d="M 100 50 L 50 150 L 100 250" />
						
						<!-- 404テキスト -->
						<text x="200" y="180" text-anchor="middle" class="error-404">404</text>
						
						<!-- 右ブラケット -->
						<path class="code-bracket" d="M 300 50 L 350 150 L 300 250" />
					</svg>
				</div>

				<h1 class="error-message">Not Found</h1>
				
				<div class="error-actions">
					<a href={`${import.meta.env.BASE_URL}/articles/`} class="error-link error-link-primary">
						<span>→</span>
						<span>Articles</span>
					</a>
				</div>
			</div>
		</main>
		<Footer />
		<ThemeToggle />
	</body>
</html>